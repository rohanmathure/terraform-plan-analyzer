Terraform v1.5.4
on darwin_amd64

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_instance.example will be created
  + resource "aws_instance" "example" {
      + ami                                  = "ami-0c55b159cbfafe1f0"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t3.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "my-key"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "example-instance"
        }
      + tags_all                             = {
          + "Environment" = "dev"
          + "Name"        = "example-instance"
          + "Owner"       = "terraform"
        }
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)
    }

  # aws_security_group.example will be created
  + resource "aws_security_group" "example" {
      + arn                    = (known after apply)
      + description            = "Example security group"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
            },
        ]
      + name                   = "example-sg"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Name" = "example-security-group"
        }
      + tags_all               = {
          + "Environment" = "dev"
          + "Name"        = "example-security-group"
          + "Owner"       = "terraform"
        }
      + vpc_id                 = aws_vpc.main.id
    }

Plan: 2 to add, 0 to change, 0 to destroy.

╷
│ Error: Reference to undeclared resource
│ 
│   on main.tf line 42, in resource "aws_security_group" "example":
│   42:       vpc_id                 = aws_vpc.main.id
│ 
│ A managed resource "aws_vpc" "main" has not been declared in the root module.
╵

╷
│ Error: Invalid resource type
│ 
│   on variables.tf line 15, in resource "aws_security_gruop" "another_example":
│   15: resource "aws_security_gruop" "another_example" {
│ 
│ The provider hashicorp/aws does not support resource type "aws_security_gruop".
│ Did you mean "aws_security_group"?
╵

╷
│ Error: Error creating Security Group: InvalidParameterValue: Invalid value 'invalid-vpc-id' for vpc
│ 
│   on main.tf line 50, in resource "aws_security_group" "third_example":
│   50:       vpc_id                 = "invalid-vpc-id"
│ 
│ The specified vpc ID is not valid
╵